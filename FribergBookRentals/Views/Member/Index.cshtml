@model MemberBookLoansViewModel

@{
    ViewData["Title"] = "Lån";
}

<div class="d-flex flex-column gap-3">
    <h1>Lån</h1>

    @if (!string.IsNullOrEmpty(Model.FailureMessage))
    {
        <div class="font-size_x-large text-danger text-center">@Model.FailureMessage</div>
    }
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="font-size_x-large text-success text-center">@Model.SuccessMessage</div>
    }

    <h2>Aktiva lån (@(Model.ActiveLoans.Count))</h2>
    @if (Model.ActiveLoans.Count > 0)
    {
        @await Component.InvokeAsync("BookLoanList",
            new
            {
                Books = Model.ActiveLoans,
                EnableBookReturning = true,
                EnableProlongLoan = true
            });
    }
    else
    {
        <p class="text-center">Inga aktiva lån.</p>
    }

    <h2>Stängda lån (@(Model.ClosedLoans.Count))</h2>
    @if (Model.ClosedLoans.Count > 0)
    {
        @await Component.InvokeAsync("BookLoanList",
                new
                {
                    Books = Model.ClosedLoans,
                    EnableBookReturning = false
                });
    }
    else
    {
        <p class="text-center">Inga stängda lån.</p>
    }
</div>
